//Есть словарь с видами чая и их стоимостью.
//Есть очередь людей, которые хотят заказать чай
//(можно представить её в виде массива видов чая,
//которые хотят заказать).
//Необходимо последовательно выводить в консоль сколько
//заплатит покупатель (необходимо вывести его номер по порядку,
//чай, который он заказал, и стоимость).

let teaPrices = ["черный": 100, "зеленый": 120, "фруктовый": 80, "травяной": 90]
let teaQueue = ["черный", "зеленый", "травяной", "фруктовый"]

for (index, tea) in teaQueue.enumerated() {
    guard let price = teaPrices[tea] else {
        continue
    }
    print("Покупатель №index+1) заказал чай tea) за price) рублей")
}

//Есть массив [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16,
//75, -20, -7, 15, 0, nil]. Необходимо создать новый массив,
//который будет состоять из элементов старого,
//но не должно быть nil, не должно быть 0 и 4,
//а также массив должен быть отсортирован по возрастанию.

let oldArray = [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]
let newArray = oldArray.compactMap  $0
                      .filter  $0 != 0 && $0 != 4
                      .sorted()

print(newArray) // Выводит [-20, -7, 5, 10, 15, 16, 25, 75]

//3. Написать функцию, которая на вход принимает целое число,
//а возвращает массив, который сформирован по следующим
//правилам: количество элементов соответствует переданному
//числу, массив начинается с 1, каждый последующий элемент
//больше предыдущего в 2 раза.

func generateArray(_ n: Int) -> [Int] {
    var result = [Int]()
    var value = 1
    for _ in 0..<n {
        result.append(value)
        value *= 2
    }
    return result
}

// Пример вызова функции
let generatedArray = generateArray(5)
print(generatedArray) // Выводит [1, 2, 4, 8, 16]
